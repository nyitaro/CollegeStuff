/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ThirdQuestion.java
 *
 * Created on 01-Dec-2011, 13:34:10
 */

package implementation;

import javax.swing.TransferHandler;


/**
 *
 * @author aa27927
 */
public class ThirdQuestion extends javax.swing.JFrame {
    Main main;
    int bad = 0;

    private javax.swing.JLabel dragndrop;
    java.awt.Toolkit tk = this.getToolkit();
    //calls the java tool kit so that i can get the tool kit that will enable me to use the tk.getImage
    // and assign a different image to a different values
    java.awt.Image answer1Cursor = tk.getImage("ThirdQuest5v.png");
    java.awt.Image answer2Cursor = tk.getImage("ThirdQuest10v.png");
    java.awt.Image answer3Cursor = tk.getImage("ThirdQuest15v.png");
    java.awt.Image answer4Cursor = tk.getImage("ThirdQuest20v.png");
    java.awt.Image answer5Cursor = tk.getImage("ThirdQuest25v.png");
    java.awt.Image answer6Cursor = tk.getImage("ThirdQuest30v.png");
    java.awt.Image answer7Cursor = tk.getImage("ThirdQuest35v.png");
    // Assign that different image to different cursor
    java.awt.Cursor mouse1 = tk.createCustomCursor(answer1Cursor, new java.awt.Point(0, 0), "1");
    java.awt.Cursor mouse2 = tk.createCustomCursor(answer2Cursor, new java.awt.Point(0, 0), "2");
    java.awt.Cursor mouse3 = tk.createCustomCursor(answer3Cursor, new java.awt.Point(0, 0), "3");
    java.awt.Cursor mouse4 = tk.createCustomCursor(answer4Cursor, new java.awt.Point(0, 0), "4");
    java.awt.Cursor mouse5 = tk.createCustomCursor(answer5Cursor, new java.awt.Point(0, 0), "5");
    java.awt.Cursor mouse6 = tk.createCustomCursor(answer6Cursor, new java.awt.Point(0, 0), "6");
    java.awt.Cursor mouse7 = tk.createCustomCursor(answer7Cursor, new java.awt.Point(0, 0), "7");
    int i = 0;
                                          
    /** Creates new form ThirdQuestion */
    public ThirdQuestion(Main m) {
        main = m;
        initComponents();
        dragndrop = null;
        
        
    }

    /** This method is called from within the constructor to
     * initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainpanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ThirdQuestionbasepane = new javax.swing.JPanel();
        ThirdQuestCircuit = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        Circuit = new javax.swing.JLabel();
        dropzone = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        display = new javax.swing.JTextField();
        Options = new javax.swing.JPanel();
        ThirdQuestion5v = new javax.swing.JLabel();
        ThirdQuestion10v = new javax.swing.JLabel();
        ThirdQuestion15v = new javax.swing.JLabel();
        ThirdQuestion20v = new javax.swing.JLabel();
        ThirdQuestion25v = new javax.swing.JLabel();
        ThirdQuestion30v = new javax.swing.JLabel();
        ThirdQuestion35v = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        question = new javax.swing.JTextArea();
        nextbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        jLabel1.setText("                Third Question");

        ThirdQuestionbasepane.setBorder(javax.swing.BorderFactory.createTitledBorder("basepane"));

        ThirdQuestCircuit.setBackground(java.awt.Color.white);
        ThirdQuestCircuit.setBorder(javax.swing.BorderFactory.createTitledBorder("Circuit"));
        ThirdQuestCircuit.setLayout(null);

        Circuit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/implementation/FirstDragnDropQuestionCircuit.jpg"))); // NOI18N
        Circuit.setBounds(0, 0, 610, 410);
        jLayeredPane1.add(Circuit, javax.swing.JLayeredPane.DEFAULT_LAYER);

        dropzone.setEditable(false);
        dropzone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dropzoneMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dropzoneMouseReleased(evt);
            }
        });
        dropzone.setBounds(170, 50, 80, 40);
        jLayeredPane1.add(dropzone, javax.swing.JLayeredPane.PALETTE_LAYER);

        ThirdQuestCircuit.add(jLayeredPane1);
        jLayeredPane1.setBounds(8, 10, 610, 410);

        jLabel3.setText("Result :");
        ThirdQuestCircuit.add(jLabel3);
        jLabel3.setBounds(20, 440, 50, 30);

        display.setEditable(false);
        ThirdQuestCircuit.add(display);
        display.setBounds(70, 440, 170, 30);

        Options.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Options")));

        ThirdQuestion5v.setText("        5 Volt");
        ThirdQuestion5v.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 0, 0), java.awt.Color.gray));
        ThirdQuestion5v.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ThirdQuestion5vMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ThirdQuestion5vMouseReleased(evt);
            }
        });

        ThirdQuestion10v.setText("        10 Volt");
        ThirdQuestion10v.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 0, 0), java.awt.Color.gray));
        ThirdQuestion10v.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ThirdQuestion10vMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ThirdQuestion10vMouseReleased(evt);
            }
        });

        ThirdQuestion15v.setText("        15 Volt");
        ThirdQuestion15v.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 0, 0), java.awt.Color.gray));
        ThirdQuestion15v.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ThirdQuestion15vMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ThirdQuestion15vMouseReleased(evt);
            }
        });

        ThirdQuestion20v.setText("        20 Volt");
        ThirdQuestion20v.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 0, 0), java.awt.Color.gray));
        ThirdQuestion20v.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ThirdQuestion20vMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ThirdQuestion20vMouseReleased(evt);
            }
        });

        ThirdQuestion25v.setText("       25 Volt");
        ThirdQuestion25v.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 0, 0), java.awt.Color.gray));
        ThirdQuestion25v.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ThirdQuestion25vMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ThirdQuestion25vMouseReleased(evt);
            }
        });

        ThirdQuestion30v.setText("        30 Volt");
        ThirdQuestion30v.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 0, 0), java.awt.Color.gray));
        ThirdQuestion30v.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ThirdQuestion30vMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ThirdQuestion30vMouseReleased(evt);
            }
        });

        ThirdQuestion35v.setText("       35 Volt");
        ThirdQuestion35v.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 0, 0), java.awt.Color.gray));
        ThirdQuestion35v.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ThirdQuestion35vMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ThirdQuestion35vMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout OptionsLayout = new javax.swing.GroupLayout(Options);
        Options.setLayout(OptionsLayout);
        OptionsLayout.setHorizontalGroup(
            OptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OptionsLayout.createSequentialGroup()
                .addGroup(OptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ThirdQuestion10v, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThirdQuestion15v, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThirdQuestion20v, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThirdQuestion25v, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThirdQuestion30v, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThirdQuestion35v, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThirdQuestion5v, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        OptionsLayout.setVerticalGroup(
            OptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ThirdQuestion5v, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(ThirdQuestion10v, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ThirdQuestion15v, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ThirdQuestion20v, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ThirdQuestion25v, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ThirdQuestion30v, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ThirdQuestion35v, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout ThirdQuestionbasepaneLayout = new javax.swing.GroupLayout(ThirdQuestionbasepane);
        ThirdQuestionbasepane.setLayout(ThirdQuestionbasepaneLayout);
        ThirdQuestionbasepaneLayout.setHorizontalGroup(
            ThirdQuestionbasepaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ThirdQuestionbasepaneLayout.createSequentialGroup()
                .addComponent(Options, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ThirdQuestCircuit, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        ThirdQuestionbasepaneLayout.setVerticalGroup(
            ThirdQuestionbasepaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ThirdQuestCircuit, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
            .addComponent(Options, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Question"));

        question.setColumns(20);
        question.setEditable(false);
        question.setRows(5);
        question.setText("Q) What is the total voltage reading going to be ?");
        jScrollPane1.setViewportView(question);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        nextbtn.setText("Next");
        nextbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainpanelLayout = new javax.swing.GroupLayout(mainpanel);
        mainpanel.setLayout(mainpanelLayout);
        mainpanelLayout.setHorizontalGroup(
            mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainpanelLayout.createSequentialGroup()
                .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainpanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(ThirdQuestionbasepane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainpanelLayout.createSequentialGroup()
                        .addGap(323, 323, 323)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainpanelLayout.createSequentialGroup()
                        .addContainerGap(771, Short.MAX_VALUE)
                        .addComponent(nextbtn)))
                .addContainerGap())
        );
        mainpanelLayout.setVerticalGroup(
            mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainpanelLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ThirdQuestionbasepane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextbtn))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainpanel, javax.swing.GroupLayout.DEFAULT_SIZE, 834, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * When you click on each different labels, It will change the cursor into the assigned image in relation to that label.
     * for example, if you click on the label that says 5v, it will change the iamge of cursor to "mouse1" which in turn is equal to
     * image1Cursor that is the assigned to the image of 5v
     * @param evt
     */
    private void ThirdQuestion5vMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdQuestion5vMousePressed
        // TODO add your handling code here:
        dragndrop = ThirdQuestion5v;
        setCursor(mouse1);
        dropzone.setText(null);
}//GEN-LAST:event_ThirdQuestion5vMousePressed
    /**
     * When you click on each different labels, It will change the cursor into the assigned image in relation to that label.
     * for example, if you click on the label that says 10v, it will change the iamge of cursor to "mouse1" which in turn is equal to
     * image1Cursor that is the assigned to the image of 10v
     * @param evt
     */
    private void ThirdQuestion10vMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdQuestion10vMousePressed
        // TODO add your handling code here:
        dragndrop = ThirdQuestion10v;
        setCursor(mouse2);
        dropzone.setText(null);
}//GEN-LAST:event_ThirdQuestion10vMousePressed
    /**
     * When you click on each different labels, It will change the cursor into the assigned image in relation to that label.
     * for example, if you click on the label that says 15v, it will change the iamge of cursor to "mouse1" which in turn is equal to
     * image1Cursor that is the assigned to the image of 15v
     * @param evt
     */
    private void ThirdQuestion15vMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdQuestion15vMousePressed
        // TODO add your handling code here:
        dragndrop = ThirdQuestion15v;
        setCursor(mouse3);
        dropzone.setText(null);
}//GEN-LAST:event_ThirdQuestion15vMousePressed
    /**
     * When you click on each different labels, It will change the cursor into the assigned image in relation to that label.
     * for example, if you click on the label that says 20v, it will change the iamge of cursor to "mouse1" which in turn is equal to
     * image1Cursor that is the assigned to the image of 20v
     * @param evt
     */
    private void ThirdQuestion20vMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdQuestion20vMousePressed
        // TODO add your handling code here:
        dragndrop = ThirdQuestion20v;
        setCursor(mouse4);
        dropzone.setText(null);
}//GEN-LAST:event_ThirdQuestion20vMousePressed
    /**
     * When you click on each different labels, It will change the cursor into the assigned image in relation to that label.
     * for example, if you click on the label that says 25v, it will change the iamge of cursor to "mouse1" which in turn is equal to
     * image1Cursor that is the assigned to the image of 25v
     * @param evt
     */
    private void ThirdQuestion25vMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdQuestion25vMousePressed
        // TODO add your handling code here:
        dragndrop = ThirdQuestion25v;
        setCursor(mouse5);
        dropzone.setText(null);
}//GEN-LAST:event_ThirdQuestion25vMousePressed
    /**
     * When you click on each different labels, It will change the cursor into the assigned image in relation to that label.
     * for example, if you click on the label that says 30v, it will change the iamge of cursor to "mouse1" which in turn is equal to
     * image1Cursor that is the assigned to the image of 30v
     * @param evt
     */
    private void ThirdQuestion30vMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdQuestion30vMousePressed
        // TODO add your handling code here:
        dragndrop = ThirdQuestion30v;
        setCursor(mouse6);
        dropzone.setText(null);
}//GEN-LAST:event_ThirdQuestion30vMousePressed
    /**
     * When you click on each different labels, It will change the cursor into the assigned image in relation to that label.
     * for example, if you click on the label that says 35v, it will change the iamge of cursor to "mouse1" which in turn is equal to
     * image1Cursor that is the assigned to the image of 35v
     * @param evt
     */
    private void ThirdQuestion35vMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdQuestion35vMousePressed
        // TODO add your handling code here:
        dragndrop = ThirdQuestion35v;
        setCursor(mouse7);
        dropzone.setText(null);
}//GEN-LAST:event_ThirdQuestion35vMousePressed
    /**
     * finds the location of the dropzon in relation to the screen as that is how mouse coordinate works
     * then checks if the mouse is in the dropzone. if it is, it "drops" the text, since this is wrong, it will set the text on display
      * to "Wrong".
     * sets the component being dragged back to null
     * and sets the cursor back to default
     * @param evt
     */
    private void ThirdQuestion5vMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdQuestion5vMouseReleased
        long x = dropzone.getX() + jLayeredPane1.getX() + ThirdQuestCircuit.getX() + ThirdQuestionbasepane.getX() + mainpanel.getX() + this.getX();
        long y = dropzone.getY() + jLayeredPane1.getY() + ThirdQuestCircuit.getY() + ThirdQuestionbasepane.getY() + mainpanel.getY() + this.getY();
        if(getMousePosition().x > x && getMousePosition().x < x + dropzone.getWidth() &&
                getMousePosition().y > y && getMousePosition().y < y + dropzone.getHeight() ) {
            dropzone.setText(dragndrop.getText());
            display.setText("Wrong");
            bad += 1;
}
        dragndrop = null;
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

     
    }//GEN-LAST:event_ThirdQuestion5vMouseReleased
    /**
     * finds the location of the dropzon in relation to the screen as that is how mouse coordinate works
     * then checks if the mouse is in the dropzone. if it is, it "drops" the text, since this is wrong, it will set the text on display
      * to "Wrong".
     * sets the component being dragged back to null
     * and sets the cursor back to default
     * @param evt
     */
    private void ThirdQuestion10vMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdQuestion10vMouseReleased
        long x = dropzone.getX() + jLayeredPane1.getX() + ThirdQuestCircuit.getX() + ThirdQuestionbasepane.getX() + mainpanel.getX() + this.getX();
        long y = dropzone.getY() + jLayeredPane1.getY() + ThirdQuestCircuit.getY() + ThirdQuestionbasepane.getY() + mainpanel.getY() + this.getY();
        if(getMousePosition().x > x && getMousePosition().x < x + dropzone.getWidth() && 
                getMousePosition().y > y && getMousePosition().y < y + dropzone.getHeight() ) {
            dropzone.setText(dragndrop.getText());
            display.setText("Wrong");
            bad += 1;
        }
        dragndrop = null;
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_ThirdQuestion10vMouseReleased
 /**
     * finds the location of the dropzon in relation to the screen as that is how mouse coordinate works
     * then checks if the mouse is in the dropzone. if it is, it "drops" the text, since this is CORRECT, it will set the text on display
      * to "It's correct".
     * sets the component being dragged back to null
     * and sets the cursor back to default
     * @param evt
     */
    private void ThirdQuestion15vMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdQuestion15vMouseReleased
        long x = dropzone.getX() + jLayeredPane1.getX() + ThirdQuestCircuit.getX() + ThirdQuestionbasepane.getX() + mainpanel.getX() + this.getX();
        long y = dropzone.getY() + jLayeredPane1.getY() + ThirdQuestCircuit.getY() + ThirdQuestionbasepane.getY() + mainpanel.getY() + this.getY();
        if(getMousePosition().x > x && getMousePosition().x < x + dropzone.getWidth() && 
                getMousePosition().y > y && getMousePosition().y < y + dropzone.getHeight() ) {
            dropzone.setText(dragndrop.getText());
            display.setText("wrong");
            bad = +1;
        }
        dragndrop = null;
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_ThirdQuestion15vMouseReleased
     /**
     * finds the location of the dropzon in relation to the screen as that is how mouse coordinate works
     * then checks if the mouse is in the dropzone. if it is, it "drops" the text, since this is wrong, it will set the text on display
      * to "Wrong".
     * sets the component being dragged back to null
     * and sets the cursor back to default
     * @param evt
     */
    private void ThirdQuestion20vMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdQuestion20vMouseReleased
        long x = dropzone.getX() + jLayeredPane1.getX() + ThirdQuestCircuit.getX() + ThirdQuestionbasepane.getX() + mainpanel.getX() + this.getX();
        long y = dropzone.getY() + jLayeredPane1.getY() + ThirdQuestCircuit.getY() + ThirdQuestionbasepane.getY() + mainpanel.getY() + this.getY();
        if(getMousePosition().x > x && getMousePosition().x < x + dropzone.getWidth() && 
                getMousePosition().y > y && getMousePosition().y < y + dropzone.getHeight() ) {
            dropzone.setText(dragndrop.getText());
            display.setText("It's correct");
            //If they got it right in less than 2 clicks, 1 will be added to the current score
           if( bad < 2 ){
                main.score = +1;
            }
        }
        dragndrop = null;
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_ThirdQuestion20vMouseReleased
     /**
     * finds the location of the dropzon in relation to the screen as that is how mouse coordinate works
     * then checks if the mouse is in the dropzone. if it is, it "drops" the text, since this is wrong, it will set the text on display
      * to "Wrong".
     * sets the component being dragged back to null
     * and sets the cursor back to default
     * @param evt
     */
    private void ThirdQuestion25vMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdQuestion25vMouseReleased
        long x = dropzone.getX() + jLayeredPane1.getX() + ThirdQuestCircuit.getX() + ThirdQuestionbasepane.getX() + mainpanel.getX() + this.getX();
        long y = dropzone.getY() + jLayeredPane1.getY() + ThirdQuestCircuit.getY() + ThirdQuestionbasepane.getY() + mainpanel.getY() + this.getY();
        if(getMousePosition().x > x && getMousePosition().x < x + dropzone.getWidth() && 
                getMousePosition().y > y && getMousePosition().y < y + dropzone.getHeight() ) {
            dropzone.setText(dragndrop.getText());
            display.setText("Wrong");
            bad += 1;
        }
        dragndrop = null;
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_ThirdQuestion25vMouseReleased
     /**
     * finds the location of the dropzon in relation to the screen as that is how mouse coordinate works
     * then checks if the mouse is in the dropzone. if it is, it "drops" the text, since this is wrong, it will set the text on display
      * to "Wrong".
     * sets the component being dragged back to null
     * and sets the cursor back to default
     * @param evt
     */
    private void ThirdQuestion30vMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdQuestion30vMouseReleased
        long x = dropzone.getX() + jLayeredPane1.getX() + ThirdQuestCircuit.getX() + ThirdQuestionbasepane.getX() + mainpanel.getX() + this.getX();
        long y = dropzone.getY() + jLayeredPane1.getY() + ThirdQuestCircuit.getY() + ThirdQuestionbasepane.getY() + mainpanel.getY() + this.getY();
        if(getMousePosition().x > x && getMousePosition().x < x + dropzone.getWidth() && 
                getMousePosition().y > y && getMousePosition().y < y + dropzone.getHeight() ) {
            dropzone.setText(dragndrop.getText());
            display.setText("Wrong");
            bad += 1;
        }
        dragndrop = null;
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_ThirdQuestion30vMouseReleased
         /**
     * finds the location of the dropzon in relation to the screen as that is how mouse coordinate works
     * then checks if the mouse is in the dropzone. if it is, it "drops" the text, since this is wrong, it will set the text on display
      * to "Wrong".
     * sets the component being dragged back to null
     * and sets the cursor back to default
     * @param evt
     */
    private void ThirdQuestion35vMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThirdQuestion35vMouseReleased
        long x = dropzone.getX() + jLayeredPane1.getX() + ThirdQuestCircuit.getX() + ThirdQuestionbasepane.getX() + mainpanel.getX() + this.getX();
        long y = dropzone.getY() + jLayeredPane1.getY() + ThirdQuestCircuit.getY() + ThirdQuestionbasepane.getY() + mainpanel.getY() + this.getY();
        if(getMousePosition().x > x && getMousePosition().x < x + dropzone.getWidth() && 
                getMousePosition().y > y && getMousePosition().y < y + dropzone.getHeight() ) {
            dropzone.setText(dragndrop.getText());
            display.setText("Wrong");
            bad += 1;
        }
        dragndrop = null;
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_ThirdQuestion35vMouseReleased

    private void dropzoneMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dropzoneMouseReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_dropzoneMouseReleased

    private void dropzoneMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dropzoneMouseEntered
        if(i == 3){
           dropzone.setText("30v");
           display.setText("Correct");
        }
    }//GEN-LAST:event_dropzoneMouseEntered

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseMoved

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseDragged

    private void nextbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextbtnActionPerformed
        // This will check if the text in display is same as ''It's correct'' and if it is, it will enable the button to
        // go to the FourthQuestion and open it and will close this current page.
        if(display.getText().matches("It's correct")){
            new FourthQuestion(main).setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_nextbtnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Circuit;
    private javax.swing.JPanel Options;
    private javax.swing.JPanel ThirdQuestCircuit;
    private javax.swing.JLabel ThirdQuestion10v;
    private javax.swing.JLabel ThirdQuestion15v;
    private javax.swing.JLabel ThirdQuestion20v;
    private javax.swing.JLabel ThirdQuestion25v;
    private javax.swing.JLabel ThirdQuestion30v;
    private javax.swing.JLabel ThirdQuestion35v;
    private javax.swing.JLabel ThirdQuestion5v;
    private javax.swing.JPanel ThirdQuestionbasepane;
    private javax.swing.JTextField display;
    private javax.swing.JTextField dropzone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainpanel;
    private javax.swing.JButton nextbtn;
    private javax.swing.JTextArea question;
    // End of variables declaration//GEN-END:variables

}


